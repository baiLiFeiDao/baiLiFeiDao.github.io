<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>百里飞刀的博客</title>
  
  <subtitle>想起一生中后悔的事，梅花便落满了南山</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-11-14T06:35:50.134Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>百里飞刀</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>多线程入门</title>
    <link href="http://example.com/2023/11/10/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A8/"/>
    <id>http://example.com/2023/11/10/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A8/</id>
    <published>2023-11-10T07:36:07.000Z</published>
    <updated>2023-11-14T06:35:50.134Z</updated>
    
    <content type="html"><![CDATA[<p>这篇学习笔记是在chatgpt教我多线程的过程中记录下来的。感谢chatgpt！！！</p><h3 id="创建一个简单的多线程应用程序"><a href="#创建一个简单的多线程应用程序" class="headerlink" title="创建一个简单的多线程应用程序"></a>创建一个简单的多线程应用程序</h3><p>1.实现一个runnable接口，重写run方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PrintNumbers</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+<span class="string">&quot;:&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.在主类中创建线程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">PrintNumbers</span>());</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">PrintNumbers</span>());</span><br><span class="line">        </span><br><span class="line">        thread1.start();</span><br><span class="line">        thread2.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.运行结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Thread-0:0</span><br><span class="line">Thread-1:0</span><br><span class="line">Thread-0:1</span><br><span class="line">Thread-1:1</span><br><span class="line">Thread-0:2</span><br><span class="line">Thread-1:2</span><br><span class="line">Thread-0:3</span><br><span class="line">Thread-1:3</span><br><span class="line">Thread-1:4</span><br><span class="line">Thread-1:5</span><br><span class="line">Thread-1:6</span><br><span class="line">Thread-0:4</span><br><span class="line">Thread-0:5</span><br><span class="line">Thread-0:6</span><br><span class="line">Thread-0:7</span><br><span class="line">Thread-0:8</span><br><span class="line">Thread-0:9</span><br><span class="line">Thread-1:7</span><br><span class="line">Thread-1:8</span><br><span class="line">Thread-1:9</span><br></pre></td></tr></table></figure><h3 id="线程的工作原理"><a href="#线程的工作原理" class="headerlink" title="线程的工作原理"></a>线程的工作原理</h3><p>在这段Java程序中，<code>Thread-0</code>和<code>Thread-1</code>是真正的线程，不是模拟的。</p><ul><li><strong>操作系统级别的线程：</strong>当在Java中创建线程时，Java虚拟机(JVM)会向操作系统请求创建一个新的线程。操作系统分配处理器时间和资源来执行这些线程。</li><li><strong>线程调度：</strong>线程的执行顺序是由操作系统的线程调度器控制。这通常基于多种因素，如线程优先级、处理器时间片等。</li><li><strong>上下文切换：</strong>上面运行结果中线程交替执行是由于操作系统进行了线程间的上下文切换，操作系统会保存当前执行线程的状态，并恢复另一个线程的状态，从而实现多个线程的并发执行。</li><li><strong>并发与并行：</strong>在多核处理器上，线程可以实现真正的并行执行，即多个线程同时运行在不同的处理器核心上。而在单核处理器上，多线程是通过快速切换来模拟并发执行的。</li></ul><h3 id="创建一个简单的线程同步应用程序"><a href="#创建一个简单的线程同步应用程序" class="headerlink" title="创建一个简单的线程同步应用程序"></a>创建一个简单的线程同步应用程序</h3><p>制作一个Java应用程序，其中多个线程对同一个对象的同一个方法进行访问，目的是理解和实践线程同步。</p><p>1.创建共享资源类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Counter</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">increment</span><span class="params">()</span>&#123;</span><br><span class="line">        count++;</span><br><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">&quot;:&quot;</span>+count);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    这里的increment方法使用synchronized关键字，确保同一时间只有一个线程可以访问这个方法。</p><p>2.编写线程类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CounterRunnable</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Counter counter;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CounterRunnable</span><span class="params">(Counter counter)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.counter = counter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            counter.increment();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.在主类中创建和启动线程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Counter</span> <span class="variable">counter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Counter</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">CounterRunnable</span>(counter));</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">CounterRunnable</span>(counter));</span><br><span class="line"></span><br><span class="line">        thread1.start();</span><br><span class="line">        thread2.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.运行结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Thread-1:1</span><br><span class="line">Thread-1:2</span><br><span class="line">Thread-1:3</span><br><span class="line">Thread-1:4</span><br><span class="line">Thread-1:5</span><br><span class="line">Thread-1:6</span><br><span class="line">Thread-1:7</span><br><span class="line">Thread-1:8</span><br><span class="line">Thread-1:9</span><br><span class="line">Thread-1:10</span><br><span class="line">Thread-0:11</span><br><span class="line">Thread-0:12</span><br><span class="line">Thread-0:13</span><br><span class="line">Thread-0:14</span><br><span class="line">Thread-0:15</span><br><span class="line">Thread-0:16</span><br><span class="line">Thread-0:17</span><br><span class="line">Thread-0:18</span><br><span class="line">Thread-0:19</span><br><span class="line">Thread-0:20</span><br></pre></td></tr></table></figure><p>线程同步：多个线程访问同一资源时，使用synchronized关键字防止数据不一致的问题。</p><h3 id="Thread类的方法"><a href="#Thread类的方法" class="headerlink" title="Thread类的方法"></a>Thread类的方法</h3><ul><li>join()：等待一个线程完成其执行</li><li>sleep()：使当前线程暂停执行一定实践</li><li>interrupt()：中断线程的当前执行</li></ul><h3 id="ExecutorService和线程池"><a href="#ExecutorService和线程池" class="headerlink" title="ExecutorService和线程池"></a>ExecutorService和线程池</h3><p>线程池基础：有效管理多个线程，重用线程，减少线程创建和开销</p><p>不同类型的线程池：</p><ul><li>单线程执行器（Executors.newSingleThreadExecutor()）</li><li>固定大小的线程池（Executors.newFixedThreadPool(nThreads)）</li><li>可缓存的线程池(Executors.newCachedThreadPool())</li></ul><p>ExecutorService</p><ul><li><p>线程池管理：提供了一个线程池，可以重复使用已创建的线程，避免了频繁创建和销毁线程的开销，特别是在处理大量短期异步任务的场景中。</p></li><li><p>任务提交和执行</p><ul><li>将Runnable或Callable任务提交给ExecutorService进行执行<ul><li>Runnable不返回值，Callable可以返回值(得到一个Future对象，用它来检索Callable地返回值)</li><li>Runnable不能抛出受检异常，而Callable可以</li><li>Runnable有run方法，Callable有call方法</li></ul></li></ul></li><li><p>改善资源管理：通过线程池，ExecutorService可以更有效地使用系统资源，提高响应速度，减少资源消耗。</p></li><li><p>提供了任务执行的多种方法：execute、submit,还有返回未来结果的Future对象 ，用于追踪任务的执行状态和结果。</p></li><li><p>优雅地关闭线程池：提供了shutdown()和shutdownNow方法，用于优雅地关闭线程池，保证所有任务都得到处理</p></li></ul><h3 id=""><a href="#" class="headerlink" title=" "></a> </h3>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这篇学习笔记是在chatgpt教我多线程的过程中记录下来的。感谢chatgpt！！！&lt;/p&gt;
&lt;h3 id=&quot;创建一个简单的多线程应用程序&quot;&gt;&lt;a href=&quot;#创建一个简单的多线程应用程序&quot; class=&quot;headerlink&quot; title=&quot;创建一个简单的多线程应用程序</summary>
      
    
    
    
    
    <category term="多线程" scheme="http://example.com/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>改善情绪</title>
    <link href="http://example.com/2023/11/06/%E6%94%B9%E5%96%84%E6%83%85%E7%BB%AA/"/>
    <id>http://example.com/2023/11/06/%E6%94%B9%E5%96%84%E6%83%85%E7%BB%AA/</id>
    <published>2023-11-06T00:54:57.000Z</published>
    <updated>2023-11-16T08:12:07.187Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="736a6eb919eef2c2b5f9258671646909906a621f88c438226baf6daf69555a03">a81b18b76326989181327cf554748c52a439c2289282ac04be56eeb5bf3c469a0a43d03ccb0db5d670a290e442e0a6249ed2dc810b56b74a9a4d93dde24f088a939f1b76d3744a89187b1a5539ceef52f78c66c9231ce1bb4d70e7048ccc87f634dfa932d114fac488f95fd377a524961ec4e7496af466d75d25e88d6396209428d04690d8a528a230a3d13461521506a42f63bd54bc446070f024078a2b8a9a</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    
    <category term="心理" scheme="http://example.com/tags/%E5%BF%83%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>2023年日志</title>
    <link href="http://example.com/2023/11/02/11%E6%9C%88%E6%97%A5%E5%BF%97/"/>
    <id>http://example.com/2023/11/02/11%E6%9C%88%E6%97%A5%E5%BF%97/</id>
    <published>2023-11-02T00:52:32.000Z</published>
    <updated>2023-11-16T08:15:01.797Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="d948f4ba36c171929cd9d449a2346f07a295c56544d43cc81f9044e9dee8814c">a81b18b76326989181327cf554748c520b48daf5cdb1623ccc66824040b3f76a0ace07b9fcd3d9c55ccfd4e0a3f4405a6f6dbaf1e926b5317d788ee1da7af2ea7aa064e215a73dc6cdcdb5f17c21ffbe4f470164060b5afca763b1f2bc469bcc507f9f1e6d135bc2e7c4b03377997c2f6a749843908a482fd27589c31c9acd0350f4cfb6c28c53f3269e61064f248623c2e26062f23ab93abcc565bd3250f8a1d7d7d26df51feb5cd4594ea481933e55bcceb64420e7f023482563874bd72dbcf831cb357f788dda614aa9b1203ccc1b4ef60d4f888c06f62332a6f479484c33a924e91b4bf89ab0c83206b58ae37caa38b62c70ff9186fa9bb5fcaadebee1d8abedde18d09059b2ba13023671f57d423035210fc530abe7dbc2286bb81f1530d4fe3911bacf1e55645588db4eb71de5179501aac404b255321885f183e76c41cef5e9099b65ed8e3965653cd43e37cfc69a39677e07405ea19d5955ecebc77c9001409dc8bfb01f337f7ff5423a593d76b1169072b42b00edced0b26c55bdd1623c86c3ff5fdf1e49a2788a8669edbf63e3e31e01a1e82c582d00f603900290c701bb9363503346afcb64e12265e7c56caccf5d4b4c2ffffe5ffeb509d37c21b814a1d8d3581fedad4a10697e6485ae065763cb4e0e3d0755a3b38e8aba872d7695bd71bcf24ffa0c057a10942580e6ceb6485f39a3c154fb82509a4908e4f317589f83db303e6476b0ff00bd46bf8aa4a9ded4aa633d7eed25bc19381f9b8f65df2f151eaca2f98efa89472db2a5a0edc207fba36e44515a64a6eb1052a3dd8bf7a98f46bb2c53e932204845e730c7fa70ac19437512182adb04b153795403953e14e26f97a15ff0a853b0f179e6c681d4ce1d7d4886bab62da814cf1bd53e9b2d5c137485ffd0d509f123a9a1b8b61d6ef4c01e3751a3b522bc4de0b9dc87b9d5a965ce67daf4c91831ef87007b53b2efec77b4141369c1450ac609e60f0b56fa380d3c9144cf674255460cdcfb1d40a0c41b27f82b03be90c272c0ec82ab720fbcff803ed2ee8aa01c9fc7f2e9ba144b482cb08912efb9698b5320cfdec41d69c043e6b4f376d2324545ab120a665cb218df3fbe606cc97069bc1220b214a59bbf5fd5b715ad340ba0a66651c841ed28e173f83d0ec18ded54b5837d4cbb993bdc83ed133eb8449f471b26e713e3ce8fcaf62fceb949ec5338ade53822920ccf24a0b9ab656f3ca57525679b798ac430b948554d1fe4510e38b07c778e5c765c28552fbe64d70ecbfb4068042f9b21e1985fe9b390750f591ebb54ad63358f9eac1aec7bf8e8b9652db4f14ea5c06b5c8e81b12eae2036a2649cf4cc6b5dbd894d47f4d146ced126b18e5022c36c56d7271f8d03dffeedfb7a369bac925edb923dfac98bee8e976dee7925080be6c4bd23c8022f479ca7af82a6ae9f82196423cfdece71ae9e07e5e5c8d37971cd33e499a5818cfd58d1cca1cab1d6e6e77e7d6b51e5bcebd17b77e97bf2ed111632cab842506b46ed222bba1e57fa433b939077445175a5d5e6a0c7058c7194288bc3258365b8f57bbd371d5c667d6c65a706403a264351f5b5048f8d595faf974390e1896e53f95d27c4ab4b5c691bc22a81989efe464d1ed581b3480d2d79a663fae20e29586a1f540c9ccd670bd0628eeb11295b43eae4f65d33aec778214039690e7f28814badb19fe999f64f332c29599c7b7761cd0491751b130a46428230576aca3b34785df3835868d46dbdc899f132f0fcc13ec646d5c3b8fd8690a444b2e2a83b556fba8a0ce1dea879ec025c26752e053805380542ed2fbb1f4eb6c43db8ba57e5c7b16d2c3e49a7f6043aff8d1cb35457ec7b717968a1aac1024a6072ac594ebd5bad9b1cfc5fdc0d9ead7c3dc9594aaa9087e7f23cd34178a6e33d9920296039bba4cb0bb7f9d2e09c15ee5fa18eb4077cc2f2fc55c1e4e1f0aece00157e58973dca15aa1268011bae8bb8b8e2779a9cad6b8a4f5edcb8deb12476763201db54bcf134dd9e43487827d8a4a13ec062e7e9821f18ee8e16632878b3268a076660c16252b021e6adfad9913c56e342f988cb8e1f6fd4c1a3aca4ac77dfeef43f5c7061f8ff5ffe0d6160d98155763433b7cf01478d58d5f0b642f5b605c73bb24d052fb57e39ef62c5811bdaf8eca2364ec733566a3480c945b505654075d9a43459c4eab01282db0a873ceb453aa3b8ad8c937d16dc765bc7519aed28e7896779d14d305f7a7b8506286cd56a9c8d076a92cd4309a149415bdec963e35bcfc36105de8b1eb851e9deb9ab72319ca2ce285b535bd2ca06d4e0b099f945ae3a3d8076b7f9ec24f5b2f0a4fddfe889730f2bc0db7aad14d1dc79d36c5f07e5f9880343fb1015798190c13e8498b640e27e0de2f42e7503b32476f8c4377a513d715c1b5483f20e9d4cbc113e13b381a3553eff7419aa09a80e159c84130e1f9e31e5b421c5948c0323c424f4bc9c7a29b0e5e1aa9532b02df4633ad8afd9026ebcc40cc43145c57aa3c9d89a6d5323d5c41ed2dee51a2ab3663fae996c489d88392a2ce6592d958d06a8ebd680c8218962cc394844987b542a500d37bb6fd100d1374be40cbbdbdd81718b8eed525beb5bfbe42f8d6e8c0418d70b25add625ee10621920b665de51f77852a3fc92756229ddb4843555a248951ce839f0a37a5c6cda09d3c3fcae498dd6048d5866663b8fec66ff16b8b5d241a0bd7f61d60926a95ba101361368954eb99a4cbb3a53f19be043a7a9c6678fe86877c2318956133412564f9d267a1107b36a0d4968bf8fe7c9796961e70f1aadff3b5a9d9893ef814325a3982c2bf7bbb0b4d543d80623c7169779504ba0a418f62373081ec4571d5dd62f5cfe6e05cbf84d35e8305258879c5010f5508a7e5421f472ebc1262d027ba2c3caeaca4cfabc74ad9f80bf051471a385aa159773defe2ac2f5ed58dc67ddecef94e12ba34b4a764232862d5d25f6737a6a3a810ca6e8a1fadbe77fa207bf1c2c714161b195b5bbaa64a42914c4f10fd4ed21d1dd0a4d116e257f4feea11a465645ded1af86a18ed35b70c0885ac174f5f521b3edcf13101d5ccdf033ad9f670ece97af38309cb22e613302799ee47925c81846ee8c68eb7093d520982202e4cd214be5562aa36b26ab0169210c236ffbf60b47a9f1bdbfc44f44202404546cde01e6638ecb56f7a87c58949dff77e8d5a8430ad922a73d816bc25131117c1def62482419c8725032e4373224b51e6da8d311f251a9e69dae86ca99f4ca5d57a188e7856c0faaa0fc836e00d06914c040266132a96ee2de24d6990020fe1f728e1f1f85f035e9b38ca7e96ff4b2f0b79185996133a211f36fbdcf5372a7a8720fa705e91c6c6ee5fd2a52dc189c0aa4d9ad9a2667b069983161a3fa1786c2a188e1b02d54827016c190068ec5cecf617d7ed6733a951c3b9adf92371f9029a7937cc14bcc626137dd7440e96a0b35c40b51f60ad77b3545c620f45c2c1f7d9f8c5de902afeba05e59c2cff9b83d4098bf2e611c1c6c7f37a15aef45b2d165cce6d264dfe769113ed47e36b4e4b60d46bb8584026f8d0698c23b7dfd38cc223865acdcbf9ed1fb2bf50e35088bcf77bf3951a7d8c4c896d184382270f2be4d4ee8e1190a8041ab0b5a7a69a64dd63402c985f1222b7d17e10c6d48eb0e9a823070b6377cf7e29151c67d5a965f77fa8d1f06225d522268019454e6f8b5d9781254d5a11d79c209799ee71d440f50a0f7aa1a5e3251077850b8594879730eb217e287f2011321285655e8419ce4c27b04b47f4da59c82625694f3921ce65034b1bfd972c484f0bfc55c176605ebc9ac438d8fa23f660a71f116310759194b3080a00278df986c6f964aa7986c42555e3e933c15eb77310e8619a23e842f720c9f07c8cefc86e6d83d8c56355b485e9955c2b337b8f70ee363f3a4e0d25dad743a28e63052fa3470e288bc403f62508240466c3b09740b225665e442d9860719664b4d29043259bb9d4aff4e3e8c3a6be29d31312abd11addc0685539b1b8d7b4b076a03c06a649add4c</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    
    <category term="日志" scheme="http://example.com/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>《电锯惊魂10》观后感</title>
    <link href="http://example.com/2023/10/29/%E3%80%8A%E7%94%B5%E9%94%AF%E6%83%8A%E9%AD%8210%E3%80%8B%E8%A7%82%E5%90%8E%E6%84%9F/"/>
    <id>http://example.com/2023/10/29/%E3%80%8A%E7%94%B5%E9%94%AF%E6%83%8A%E9%AD%8210%E3%80%8B%E8%A7%82%E5%90%8E%E6%84%9F/</id>
    <published>2023-10-29T07:18:14.000Z</published>
    <updated>2023-10-30T01:04:10.233Z</updated>
    
    <content type="html"><![CDATA[<h2 id="电影背景"><a href="#电影背景" class="headerlink" title="电影背景"></a>电影背景</h2><p>这部电影的时间线在第一部电影的三周后，约翰患有晚期脑癌，为了生的希望，前往墨西哥接收高危的实验性手术，本以为奇迹般地治好了癌症，结果发现这是一场诈骗。</p><h2 id="电影中的一些对照"><a href="#电影中的一些对照" class="headerlink" title="电影中的一些对照"></a>电影中的一些对照</h2><ul><li>Diego来到墨西哥的时候，介绍了阿兹特克雨神特拉洛克雕像，后面Diego试炼失败时，有这个雕像的出现</li><li>Gabriela手术前给约翰送龙舌兰，祝他好运。对应约翰后面想送 Gabriela龙舌兰，回到这个基地，发现一切都是骗局</li><li>约翰之前有问过卡洛斯在西班牙语中的“pull”是Jalar，在最后血刑的时候，约翰说的是no jalar</li></ul><p>这是这些对照，这些细节，让这个电影更加精彩</p><h2 id="约翰的人物形象"><a href="#约翰的人物形象" class="headerlink" title="约翰的人物形象"></a>约翰的人物形象</h2><p>电锯惊魂10在电锯惊魂1的基础上，丰富了约翰的形象。电锯惊魂1中，能明显地感受到约翰是一个很聪明的人，机关、技巧、以及对人性的把控都很厉害，但是</p><p>约翰是一个拥有人格魅力的人，他坚信自己在做的是帮助人们克服内心的障碍，帮助他们在生活中做出积极的改变，他所做的一起都是为了帮助人们走上正确的道路（虽然他并没有这个权力，这正是使他成为反派的原因）。</p><p>约翰作为一个土木工程师和建筑师，他无疑是很优秀的。电影中的机关能很好地提现这一点。</p><p>todo：此处补充一些机关细节</p><p>即使约翰脑癌晚期，他还是可以看到护士的善意，称赞她是一个很好的人。</p><p>约翰虽然做的审判会让别人失去生命，会让别人很痛苦，但我们明显可以看到，他并没有漠视生命，相反，他认为生命十分可贵，即使他自己要失去生命，他也不会让无辜的卡洛斯死去。</p><p>作为约翰的爱徒，阿曼达</p><h2 id="值得思考的对话"><a href="#值得思考的对话" class="headerlink" title="值得思考的对话"></a>值得思考的对话</h2><blockquote><p>有时候我们会被引诱做出违背我们本性的事。毒品很恶毒，但它更诱人作恶。</p><p>每个人都有自由意志，Gabriela也有她的自由意志</p></blockquote><p>Amanda之前也是一个海洛因成瘾者，因此她对吸毒的Gabrila会更在意一些，认为是毒品引诱Gabrila作恶。这是Amanda和John之间的对话。</p><p>我们也会被很多“毒品”引诱做出违背我们本性的事，但我们不能将错误都推到外界的因素，我们有自己的意志，要对自己做出的事情负责。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;电影背景&quot;&gt;&lt;a href=&quot;#电影背景&quot; class=&quot;headerlink&quot; title=&quot;电影背景&quot;&gt;&lt;/a&gt;电影背景&lt;/h2&gt;&lt;p&gt;这部电影的时间线在第一部电影的三周后，约翰患有晚期脑癌，为了生的希望，前往墨西哥接收高危的实验性手术，本以为奇迹般地治好了癌</summary>
      
    
    
    
    
    <category term="影评" scheme="http://example.com/tags/%E5%BD%B1%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>深入理解git合并</title>
    <link href="http://example.com/2023/10/26/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3git%E5%90%88%E5%B9%B6/"/>
    <id>http://example.com/2023/10/26/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3git%E5%90%88%E5%B9%B6/</id>
    <published>2023-10-26T07:04:48.000Z</published>
    <updated>2023-10-26T10:32:10.745Z</updated>
    
    <content type="html"><![CDATA[<p>本文是针对<a href="https://waynerv.com/posts/git-merge-intro/">深入理解 git 合并操作</a>所做的笔记</p><h2 id="认识合并"><a href="#认识合并" class="headerlink" title="认识合并"></a>认识合并</h2><p>在版本控制系统中，合并是将一组文件中所发生的不同更改进行整合的基础操作。</p><p>合并一般由Git根据算法自动执行，如果发生了冲突，比如对同一文件的同一处内容执行了不同的更改，则需要我们手动合并。</p><h3 id="递归三路合并算法"><a href="#递归三路合并算法" class="headerlink" title="递归三路合并算法"></a>递归三路合并算法</h3><p>三路合并算法是找到被合并文件C、F的共同祖先A，然后分别对 A、C、F 提交的文件快照进行对比</p><p>Git 将逐「行」对三个文件的内容进行比较，</p><ul><li>如果三个文件中有两个文件该行的内容一致，则丢弃 A 文件中该行的内容，保留与 A 文件中不同的内容放到结果文件中。</li><li>如果三个文件内容都一致，说明什么都没有发生</li><li>如果三个文件内容都不一致，说明发生了冲突，需要手动合并选择需要保留的内容。</li></ul><p>三路合并算法的基础技术是找到被合并文件的共同祖先文件。在遇到十字交叉合并时，不存在独一无二最小共同祖先。</p><p>Git采取了递归三路合并，对没有共同祖先的一对文件递归创建虚拟祖先。这一方法还可以用于有向无环图。</p><h2 id="Git的不同合并策略"><a href="#Git的不同合并策略" class="headerlink" title="Git的不同合并策略"></a>Git的不同合并策略</h2><p>我们在使用 Git 时，通常会基于主分支拉出若干条功能分支进行开发，开发完毕后再将功能分支合入主分支。有以下不同的分支合并策略：</p><ul><li>通过 <code>merge</code>显式合并</li><li>通过 <code>rebase</code> 或 <code>fast-forward</code> 隐式合并</li><li><code>squash</code> 后隐式合并</li></ul><h3 id="通过merge显式合并"><a href="#通过merge显式合并" class="headerlink" title="通过merge显式合并"></a>通过merge显式合并</h3><p>当我们将功能分支合入主分支时，Git 会对两个分支进行递归三路合并，并以合并结果创建一个新的 Merge 提交。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文是针对&lt;a href=&quot;https://waynerv.com/posts/git-merge-intro/&quot;&gt;深入理解 git 合并操作&lt;/a&gt;所做的笔记&lt;/p&gt;
&lt;h2 id=&quot;认识合并&quot;&gt;&lt;a href=&quot;#认识合并&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    
    <category term="git" scheme="http://example.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>quartz</title>
    <link href="http://example.com/2023/10/24/quartz/"/>
    <id>http://example.com/2023/10/24/quartz/</id>
    <published>2023-10-24T01:24:13.000Z</published>
    <updated>2023-10-24T02:13:18.130Z</updated>
    
    <content type="html"><![CDATA[<p>本文是参考以下文章所做的笔记梳理</p><ul><li><a href="https://www.cnblogs.com/makemylife/p/15838776.html">实现一个任务调度系统，看这篇文章就够了</a></li><li><a href="https://juejin.cn/post/7216679822097252411">一文快速入门任务调度框架-Quartz</a></li></ul><h2 id="1-Quartz介绍"><a href="#1-Quartz介绍" class="headerlink" title="1 Quartz介绍"></a>1 Quartz介绍</h2><p>Quartz是Java开源任务调度框架。</p><h3 id="1-1-Quartz的核心组件"><a href="#1-1-Quartz的核心组件" class="headerlink" title="1.1 Quartz的核心组件"></a>1.1 Quartz的核心组件</h3><ul><li><p>任务：Job用于表示被调度的任务</p><ul><li>Job接口（实现类需要自己实现，重写execute方法）</li><li>JobDetail接口</li></ul></li><li><p>触发器：Trigger定义调度时间的元素，按照什么时间规则去执行任务。一个任务可以被多个Trigger关联，但是一个Trigger只能关联一个Job。</p><ul><li>Trigger接口</li></ul></li><li>调度器：工厂类创建Scheduler，根据触发器定义的规则调度任务<ul><li>Scheduler接口</li></ul></li></ul><pre class="mermaid">graph TD;Scheduler&nbspFactory--创建-->Scheduler--调度-->A[JOB DETAIL<br>JOB];Scheduler--调度-->B[Trigger<br>Simple Trigger&nbsp&nbsp&nbsp&nbspCron Trigger<br>自定义Trigger];A--存储-->C[Job Store<br>RAMJobStore&nbsp&nbsp&nbsp&nbspJobStoreSupport];B--存储-->C;Scheduler--注册监听-->D[Listener Manager<br>Job Listener<br>Trigger Listener]</pre><h3 id="1-2-QuartzAPI有哪些"><a href="#1-2-QuartzAPI有哪些" class="headerlink" title="1.2 QuartzAPI有哪些"></a>1.2 QuartzAPI有哪些</h3><ul><li>Scheduler：最主要的API，可以使我们与调度器进行交互</li><li>Job：一个Job组件，自定义的一个要执行的任务类就可以实现这个接口，实现这个接口的类的对象就可以被调度器进行调度执行</li><li>Job Detail：Job的详情</li><li>Job Builder：用来构建Job Detai实例</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文是参考以下文章所做的笔记梳理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/makemylife/p/15838776.html&quot;&gt;实现一个任务调度系统，看这篇文章就够了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http</summary>
      
    
    
    
    
    <category term="任务调度" scheme="http://example.com/tags/%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>HTML+CSS+JavaScript</title>
    <link href="http://example.com/2023/10/12/HTML-CSS-JavaScript/"/>
    <id>http://example.com/2023/10/12/HTML-CSS-JavaScript/</id>
    <published>2023-10-12T08:03:13.000Z</published>
    <updated>2023-10-18T02:17:02.518Z</updated>
    
    <content type="html"><![CDATA[<h2 id="html（超文本标记语言）"><a href="#html（超文本标记语言）" class="headerlink" title="html（超文本标记语言）"></a>html（超文本标记语言）</h2><p>参考文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML">https://developer.mozilla.org/zh-CN/docs/Web/HTML</a></p><h3 id="html介绍"><a href="#html介绍" class="headerlink" title="html介绍"></a>html介绍</h3><h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><p>标签分类</p><p>1.按照标签的结构来分</p><ul><li><p>围堵标签：&lt;标签&gt;内容&lt;/标签&gt;</p></li><li><p>闭合标签：&lt;标签&gt;</p></li></ul><p>2.按照标签的效果来分</p><ul><li>行内标签：这个标签不会独占一行，会和其他标签共享一行</li><li>块级标签：这个标签会独立成为一行，</li></ul><p>标签使用的注意事项：</p><p>1.标签嵌套有嵌套规则</p><p>嵌套：一个标签（围堵）中可以写另一个标签</p><p>块级标签可以嵌套块级</p><p>块级标签可以嵌套行内</p><p>行内标签可以嵌套行内</p><p>但是行内标签不可以嵌套块级</p><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><p>元素可以拥有属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;editor-note&quot;</span>&gt;</span>my cat is very grumpy<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>属性必须包含：</p><ul><li>一个空格，它在属性和元素名称之间。如果一个元素具有多个属性，则每个属性之间必须由空格分隔</li><li>属性名称，后面跟着一个等号</li><li>一个属性值，由一对引号（””）引起来。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--href:表示跳转到哪个网站</span></span><br><span class="line"><span class="comment">title:给元素添加提示信息，当鼠标悬停的时候，可以提示文字内容</span></span><br><span class="line"><span class="comment">target：_blank可以让页面在新的窗口打开--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mozilla.org/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;mozilla&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>这是一个链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>布尔属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">disabled</span>=<span class="string">&quot;disabled&quot;</span>&gt;</span>请输入名字</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">disabled</span>&gt;</span>请输入名字</span><br></pre></td></tr></table></figure><p>省略保卫属性值的引号，不建议省略</p><p>因为如果有空格，则空格后面的值被忽略</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">https://www.mozilla.org/</span>&gt;</span>这是一个链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>单引号和双引号均可以使用，单引嵌套双引，双引嵌套单引都可以</p><h4 id="实体字符"><a href="#实体字符" class="headerlink" title="实体字符"></a>实体字符</h4><p>在html中包含特殊字符时，使用表示字符的特殊编码</p><div class="table-container"><table><thead><tr><th>原义字符</th><th>等价字符引用</th></tr></thead><tbody><tr><td>&lt;</td><td>&amp;lt ;</td></tr><tr><td>&gt;</td><td>&amp;gt ;</td></tr><tr><td>“</td><td>&amp;quot ;</td></tr><tr><td>‘</td><td>&amp;apos ;</td></tr><tr><td>&amp;</td><td>&amp;amp ;</td></tr></tbody></table></div><h4 id="html中的空白"><a href="#html中的空白" class="headerlink" title="html中的空白"></a>html中的空白</h4><p>多个空格在html只会视为一个空格，使用&amp;nbsp ;增加空白</p><h4 id="html结构"><a href="#html结构" class="headerlink" title="html结构"></a>html结构</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--文档类型--&gt;</span></span><br><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--这个元素是一个容器，它包含了所有你想包含在 HTML 页面中但不在 HTML 页面中显示的内容。</span></span><br><span class="line"><span class="comment">这些内容包括你想在搜索结果中出现的关键字和页面描述、CSS 样式、字符集声明等等。--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">meta标签</span></span><br><span class="line"><span class="comment">1.meta标签的编码集的设置</span></span><br><span class="line"><span class="comment">字符集：描述了字符与二进制在计算机中的存储关系</span></span><br><span class="line"><span class="comment">世界通用编码集：utf-8</span></span><br><span class="line"><span class="comment">2.作者信息设置</span></span><br><span class="line"><span class="comment">name属性 author</span></span><br><span class="line"><span class="comment">content属性 作者信息</span></span><br><span class="line"><span class="comment">3.meta标签的关键字（keywords）设置</span></span><br><span class="line"><span class="comment">name属性 keywords</span></span><br><span class="line"><span class="comment">content属性 关键字，关键字</span></span><br><span class="line"><span class="comment">4.meta标签的描述（description）设置</span></span><br><span class="line"><span class="comment">name属性 description</span></span><br><span class="line"><span class="comment">content属性 描述信息</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;powernode&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;java培训,08年成立&quot;</span>/&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;动力节点&quot;</span>/&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我的测试站点<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是我的页面<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="html文本处理基础"><a href="#html文本处理基础" class="headerlink" title="html文本处理基础"></a>html文本处理基础</h3><p>基础：标题+段落</p><p>标题:h1到h6</p><p>段落：<p></p><p>独自成为一行，段落之间会留白</p><p>无需列表（ul）、有序列表(ol)里面是li</p><h4 id="标签的语义"><a href="#标签的语义" class="headerlink" title="标签的语义"></a>标签的语义</h4><p>标签的语义：标签的语法含义</p><p>标签效果：展示给用户看到的效果。通过样式控制，可以让标签达到相同的效果</p><p>标签的语义很重要：</p><p>1.有利于阅读，让代码的可读性变好</p><p>2.可以让网络搜索，检索到关键信息，并进行记录</p><p>3.语义化，可以让一些屏幕阅读器，针对这些标签有特殊操作，比如重音读，停顿等效果</p><p>4.在该语义下，会默认提供该语义化标签的效果</p><p>总结：使用一个标签，一定是因为在这个地方使用这种语义，而不是单纯的使用这种显示效果</p><h4 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">title</span>=<span class="string">&quot;提示信息&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>跳转到官网<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>a标签可以嵌套字、标题、图片</p><p>target默认属性时_self</p><h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--插入本地图片--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">img</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--插入网络图片--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">img</span>&gt;</span></span><br></pre></td></tr></table></figure><p>属性</p><p>1.设置图片无法展示，显示的信息:alt</p><p>2.设置鼠标悬浮的提示信息:title</p><p>3.改变图片的大小:</p><p>宽度width</p><p>高度height</p><h4 id="绝对路径和相对路径"><a href="#绝对路径和相对路径" class="headerlink" title="绝对路径和相对路径"></a>绝对路径和相对路径</h4><p>./ 代表当前目录</p><p>../代表上一级目录</p><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><p><tr> 行</p><p><td> 列</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1px&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;10px&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span><span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 表头--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">&lt;/tr &gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>跨列操作：保留左边的操作，删掉右边的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspace</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>跨行操作：保留上边的操作，删掉下边的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">rowspace</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h4><p>表单用来采集信息</p><p>1.接收到的发给谁</p><p>action:请求数据发往哪个服务器，提供服务器地址</p><p>2.怎么发：</p><p>method</p><p>get请求：请求的内容会在地址栏展示</p><p>post请求：请求的内容会隐藏在请求体中</p><p>3.带什么数据</p><p>表单项的输入数据，称为表单数据，也称为value</p><p>4.怎么带过去</p><p>让每个表单项提供一个name属性，让该表单项的name和对应的值进行绑定</p><p>5.带过去以后谁接收</p><p>服务器端会接收前端表单发出的请求数据</p><p>6.接收以后怎么处理数据</p><p>服务器端接收到了数据以后，进行该表单请求相关的业务处理</p><h5 id="输入控件"><a href="#输入控件" class="headerlink" title="输入控件"></a>输入控件</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">    用户名 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    自我介绍<span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;textarea&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;50&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交数据&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="选择控件"><a href="#选择控件" class="headerlink" title="选择控件"></a>选择控件</h5><p>单选控件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">    性别：男<span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line">    女<span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交数据&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>复选控件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">    爱好:抽烟<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    喝酒<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">    烫头<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交数据&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="下拉控件"><a href="#下拉控件" class="headerlink" title="下拉控件"></a>下拉控件</h5><p>单选</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>+&quot;<span class="attr">2</span>&quot;&gt;</span>女<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交数据&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>多选</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>抽烟<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>+&quot;<span class="attr">2</span>&quot;&gt;</span>喝酒<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>+&quot;<span class="attr">2</span>&quot;&gt;</span>烫头<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交数据&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">上传头像<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交数据&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="隐藏域控件"><a href="#隐藏域控件" class="headerlink" title="隐藏域控件"></a>隐藏域控件</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">搜索<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;key&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;act&quot;</span> <span class="attr">value</span>=<span class="string">&quot;input&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交数据&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h5><h5 id="禁用控件"><a href="#禁用控件" class="headerlink" title="禁用控件"></a>禁用控件</h5><p>标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;inputText&quot;</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h3 id="类型选择器"><a href="#类型选择器" class="headerlink" title="类型选择器"></a>类型选择器</h3><p>类型选择器：标签选择器、元素选择器</p><h3 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h3><p>类选择器，适用于我们可以将一些自定义的规则分组，将分组统一设置一个样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line"><span class="selector-class">.highlight</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:yellow;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="ID选择器"><a href="#ID选择器" class="headerlink" title="ID选择器"></a>ID选择器</h3><h3 id="伪类和伪元素"><a href="#伪类和伪元素" class="headerlink" title="伪类和伪元素"></a>伪类和伪元素</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;html（超文本标记语言）&quot;&gt;&lt;a href=&quot;#html（超文本标记语言）&quot; class=&quot;headerlink&quot; title=&quot;html（超文本标记语言）&quot;&gt;&lt;/a&gt;html（超文本标记语言）&lt;/h2&gt;&lt;p&gt;参考文档：&lt;a href=&quot;https://deve</summary>
      
    
    
    
    
    <category term="HTML+CSS+JavaScript" scheme="http://example.com/tags/HTML-CSS-JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>设计模式</title>
    <link href="http://example.com/2023/10/12/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2023/10/12/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</id>
    <published>2023-10-12T02:12:24.000Z</published>
    <updated>2023-10-12T08:02:16.660Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设计模式介绍"><a href="#设计模式介绍" class="headerlink" title="设计模式介绍"></a>设计模式介绍</h2><p>代表了代码的最佳实践，被有经验的开发人员所使用</p><p>设计模式是很多被反复使用并知晓的，主要是对代码和经验的总结</p><p>使用设计模式是为了重用代码，让代码更容易被他人理解，保证代码的可靠性</p><p>对接口编程而不是实现编程</p><p>优先使用对象组合而不是继承关系</p><h2 id="设计模式的七大原则"><a href="#设计模式的七大原则" class="headerlink" title="设计模式的七大原则"></a>设计模式的七大原则</h2><h3 id="开闭原则"><a href="#开闭原则" class="headerlink" title="开闭原则"></a>开闭原则</h3><h3 id="依赖倒转原则"><a href="#依赖倒转原则" class="headerlink" title="依赖倒转原则"></a>依赖倒转原则</h3><h3 id="单一原则"><a href="#单一原则" class="headerlink" title="单一原则"></a>单一原则</h3><h3 id="接口隔离原则"><a href="#接口隔离原则" class="headerlink" title="接口隔离原则"></a>接口隔离原则</h3><h3 id="迪米特原则"><a href="#迪米特原则" class="headerlink" title="迪米特原则"></a>迪米特原则</h3><h3 id="里氏替换原则"><a href="#里氏替换原则" class="headerlink" title="里氏替换原则"></a>里氏替换原则</h3><h3 id="合成复用原则"><a href="#合成复用原则" class="headerlink" title="合成复用原则"></a>合成复用原则</h3><h2 id="设计模式类型"><a href="#设计模式类型" class="headerlink" title="设计模式类型"></a>设计模式类型</h2><h3 id="创建型模式"><a href="#创建型模式" class="headerlink" title="创建型模式"></a>创建型模式</h3><p>隐藏了创建对象的过程，通过逻辑方法进行创建对象，而不是通过new关键字</p><h4 id="工厂方法模式"><a href="#工厂方法模式" class="headerlink" title="工厂方法模式"></a>工厂方法模式</h4><p>定义一个接口或一个抽象的工厂类，让它的实现类（工厂）来决定创建哪一个实例对象</p><p>根据每一个工厂不同的方法，来产生不同的所需要的对象</p><p>生成相同系列的对象</p><h4 id="抽象工厂模式"><a href="#抽象工厂模式" class="headerlink" title="抽象工厂模式"></a>抽象工厂模式</h4><p>类似公司下的产品，将汽车分为各个零部件进行生产</p><h3 id="结构型模式"><a href="#结构型模式" class="headerlink" title="结构型模式"></a>结构型模式</h3><p>主要关注类和对象的组合关系</p><p>继承的概念被用来组合接口和定义组合对象，获得新的功能方式</p><h3 id="行为型模式"><a href="#行为型模式" class="headerlink" title="行为型模式"></a>行为型模式</h3><p>主要关注对象之间的通信</p><p>不属于GOF23种外的设计模式</p><p>简单工厂模式：由一个工厂决定创建哪一种产品类型的实例（通过传入关键字）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;设计模式介绍&quot;&gt;&lt;a href=&quot;#设计模式介绍&quot; class=&quot;headerlink&quot; title=&quot;设计模式介绍&quot;&gt;&lt;/a&gt;设计模式介绍&lt;/h2&gt;&lt;p&gt;代表了代码的最佳实践，被有经验的开发人员所使用&lt;/p&gt;
&lt;p&gt;设计模式是很多被反复使用并知晓的，主要是对代码</summary>
      
    
    
    
    
    <category term="设计模式" scheme="http://example.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>奇妙冒险</title>
    <link href="http://example.com/2023/10/10/%E5%A5%87%E5%A6%99%E5%86%92%E9%99%A9/"/>
    <id>http://example.com/2023/10/10/%E5%A5%87%E5%A6%99%E5%86%92%E9%99%A9/</id>
    <published>2023-10-10T05:44:18.000Z</published>
    <updated>2023-10-10T06:16:24.170Z</updated>
    
    <content type="html"><![CDATA[<p>1.做一个简单的浏览器</p><p>2.让开发变得更方便的工具（比如idea的插件：idea数据库连接是怎么做的）</p><p>3.JAVA底层原理，为什么要封装那些接口</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.做一个简单的浏览器&lt;/p&gt;
&lt;p&gt;2.让开发变得更方便的工具（比如idea的插件：idea数据库连接是怎么做的）&lt;/p&gt;
&lt;p&gt;3.JAVA底层原理，为什么要封装那些接口&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="奇妙冒险" scheme="http://example.com/tags/%E5%A5%87%E5%A6%99%E5%86%92%E9%99%A9/"/>
    
  </entry>
  
  <entry>
    <title>JDBC</title>
    <link href="http://example.com/2023/10/09/JDBC/"/>
    <id>http://example.com/2023/10/09/JDBC/</id>
    <published>2023-10-09T03:20:11.000Z</published>
    <updated>2023-10-11T09:55:33.175Z</updated>
    
    <content type="html"><![CDATA[<p>JDBC是SUN公司制定的一套接口</p><p>java.sql.*</p><p>接口都有调用者和实现者</p><p>面向接口调用、面向接口写实现类，属于面向接口编程</p><p>为什么要面向接口编程？</p><p>​    解耦合：降低程序的耦合度，提高程序的扩展力</p><p>​    多态机制就是非常典型的：面向抽象编程（不要面向具体）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//建议</span></span><br><span class="line"><span class="type">Animal</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cat</span>();</span><br><span class="line"><span class="type">Animal</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">feed</span><span class="params">(Animal c)</span>&#123;<span class="comment">//面向父类型编程</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//不建议</span></span><br><span class="line"><span class="type">Cat</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cat</span>();</span><br><span class="line"><span class="type">Dog</span> <span class="variable">d</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br></pre></td></tr></table></figure><p>为什么SUN制定一套JDBC接口？</p><p>因为每个数据库的底层实现原理都不一样。</p><p>驱动：所有的数据库驱动都是以jar包的形式存在，jar包当中有很多.class文件，这些class文件就是对JDBC接口的实现</p><p>驱动不是SUN公司提供的，是各大数据库厂家负责提供，下载驱动需要去数据库官网下载</p><h2 id="2-模拟JDBC本质"><a href="#2-模拟JDBC本质" class="headerlink" title="2.模拟JDBC本质"></a>2.模拟JDBC本质</h2><p>参与角色：</p><p>调用者</p><p>SUN公司</p><p>数据库厂家</p><p>JDBC本质：接口</p><h2 id="3-JDBC准备工作"><a href="#3-JDBC准备工作" class="headerlink" title="3.JDBC准备工作"></a>3.JDBC准备工作</h2><p>从官网下载对应的驱动jar包，然后将其配置到环境变量classpath中</p><p>classpath=.;”JDBC路径”</p><p>以上配置是针对于文本编辑器的方式开发，使用idea工具的时候，不需要配置以上的环境变量</p><p>IDEA有自己的配置方式</p><h2 id="4-JDBC编程六步"><a href="#4-JDBC编程六步" class="headerlink" title="4.JDBC编程六步"></a>4.JDBC编程六步</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JDBCTest01</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>; </span><br><span class="line">        <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">//第一步：注册驱动（作用：告诉JAVA程序，即将要连接的是哪个数据库）</span></span><br><span class="line">            <span class="comment">//第一种方式</span></span><br><span class="line"><span class="type">Driver</span> <span class="variable">driver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">com</span>.mysql.jdbc.Driver();<span class="comment">//多态，父类型引用指向子类型对象</span></span><br><span class="line">            DriverManager.registerDriver(driver);</span><br><span class="line">            <span class="comment">//第二种方式（常用）</span></span><br><span class="line">            <span class="comment">//反射机制类加载，静态代码块会执行</span></span><br><span class="line">            <span class="comment">//为什么这种方式常用？因为参数是一个字符串，字符串可以写到xxx.properties文件中</span></span><br><span class="line">            <span class="comment">//以下方法不需要接收返回值，只需要运行动作</span></span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">            <span class="comment">//接收异常ClassNotFoundException</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">//第二步：获取连接（表示JVM的进程和数据库进程之间的通道打开了，这属于进程之间的通信，重量级，使用完之后一定要关闭）</span></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            url包含哪几部分：通信协议、服务器IP地址、服务器软件的端口、资源名</span></span><br><span class="line"><span class="comment">            通信协议：通信之前就提前定好的数据传送格式，格式提前定好的</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://127.0.0.1:3306/bjpowernode&quot;</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;333&quot;</span>;</span><br><span class="line">            conn = DricerManager.getConnection(url,user,password);</span><br><span class="line">            System.out.println(conn);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//第三步：获取数据库操作对象（statement专门执行sql语句的对象）</span></span><br><span class="line">            stmt = conn.createStatement();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//第四步：执行SQL语句</span></span><br><span class="line">            <span class="comment">//JDBC的SQL语句不需要写分号</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into dept(deptno,dname,loc) values(50,&#x27;人事部&#x27;,&#x27;北京&#x27;)&quot;</span>;</span><br><span class="line">            <span class="comment">//专门执行DML语句（insert delete update）</span></span><br><span class="line">            <span class="comment">//返回值是&quot;影响数据库中的记录条数&quot;</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> stmt.executeUpdate(sql);</span><br><span class="line">            System.out.println(count == <span class="number">1</span>?<span class="string">&quot;保存成功&quot;</span>:<span class="string">&quot;保存失败&quot;</span>);</span><br><span class="line">            <span class="comment">//查询语句返回结果集</span></span><br><span class="line">            <span class="comment">//ResultSet executeQuery(sql)</span></span><br><span class="line">            rs = stmt.executeQuery(sql);</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            <span class="comment">//第五步：处理查询结果集（只有当第四步执行的是select语句的时候，才有这第五步处理查询结果集）</span></span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">                <span class="comment">//下标从1开始</span></span><br><span class="line">                <span class="comment">//以列的名字获取</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">empno</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;empno&quot;</span>);<span class="comment">//列名称不是表中的列名称，是查询结果集的列名称</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">ename</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;ename&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">sal</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;sal&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">                </span><br><span class="line">            </span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="comment">//第六步：释放资源（使用完资源之后一定要关闭资源。JAVA和数据库属于进程间的通信，开启之后一定要关闭）</span></span><br><span class="line">            <span class="comment">//为了保证资源一定释放，在finally语句块中关闭资源</span></span><br><span class="line">            <span class="comment">//遵循从小到大依次关闭</span></span><br><span class="line">            <span class="comment">//关闭分别对其try、catch</span></span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(rs != <span class="literal">null</span>)&#123;</span><br><span class="line">                        rs.close();</span><br><span class="line">                    &#125;                </span><br><span class="line">                &#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;    </span><br><span class="line">                <span class="keyword">try</span>&#123;               </span><br><span class="line">                <span class="keyword">if</span>(stmt != <span class="literal">null</span>)&#123;</span><br><span class="line">                    stmt.close();</span><br><span class="line">                &#125;                </span><br><span class="line">                &#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(conn != <span class="literal">null</span>)&#123;</span><br><span class="line">                        conn.close();</span><br><span class="line">                    &#125;                </span><br><span class="line">                &#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-将连接数据库的所有信息配置到配置文件"><a href="#5-将连接数据库的所有信息配置到配置文件" class="headerlink" title="5.将连接数据库的所有信息配置到配置文件"></a>5.将连接数据库的所有信息配置到配置文件</h2><p>新建jdbc的配置文件jdbc.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://127.0.0.1:3306/bjpowernode</span></span><br><span class="line"><span class="attr">user</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">333</span></span><br></pre></td></tr></table></figure><p>JDBC连接数据库信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JDBCTest01</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="comment">//使用资源绑定器绑定属性配置文件</span></span><br><span class="line">        <span class="type">ResourceBundle</span> <span class="variable">bundle</span> <span class="operator">=</span> ResourceBundle.getBundle(<span class="string">&quot;jdbc&quot;</span>)</span><br><span class="line">        <span class="type">String</span> <span class="variable">driver</span> <span class="operator">=</span> bundle.getString(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> bundle.getString(<span class="string">&quot;url&quot;</span>);    </span><br><span class="line">        <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> bundle.getString(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> bundle.getString(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">            Class.forName(driver);</span><br><span class="line"></span><br><span class="line">            conn = DricerManager.getConnection(url,user,password);</span><br><span class="line">            System.out.println(conn);      </span><br><span class="line"></span><br><span class="line">            stmt = conn.createStatement();</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into dept(deptno,dname,loc) values(50,&#x27;人事部&#x27;,&#x27;北京&#x27;)&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> stmt.executeUpdate(sql);</span><br><span class="line">            System.out.println(count == <span class="number">1</span>?<span class="string">&quot;保存成功&quot;</span>:<span class="string">&quot;保存失败&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(stmt != <span class="literal">null</span>)&#123;</span><br><span class="line">                    stmt.close();</span><br><span class="line">                &#125;                </span><br><span class="line">            &#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(conn != <span class="literal">null</span>)&#123;</span><br><span class="line">                    conn.close();</span><br><span class="line">                &#125;                </span><br><span class="line">            &#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;<span class="keyword">catch</span>(ClassNotFoundException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-SQL注入"><a href="#6-SQL注入" class="headerlink" title="6.SQL注入"></a>6.SQL注入</h2><p>导致SQL注入的根本原因：</p><p>用户输入的信息中含有sql语句的关键字，并且这些关键字参与sql编译</p><p>解决办法：<br>statement使用preparedStatement，采用预先编译的数据库操作对象</p><p>使用statement的情况：<br>业务要求必须使用sql注入，比如点击升序降序</p><h2 id="7-JDBC事务机制"><a href="#7-JDBC事务机制" class="headerlink" title="7.JDBC事务机制"></a>7.JDBC事务机制</h2><p>JDBC采用自动提交机制</p><p>1.将自动提交改为false</p><p>2.手动提交</p><p>3.失败回滚</p><h2 id="8-悲观锁和乐观锁"><a href="#8-悲观锁和乐观锁" class="headerlink" title="8.悲观锁和乐观锁"></a>8.悲观锁和乐观锁</h2><p>sql语句中添加for updata，行级锁，也就是悲观锁</p><p>悲观锁：事务必须排队执行。数据锁住了，不允许并发</p><p>乐观锁：支持并发，事务也不需要排队，只不过需要一个版本号</p><p>事务1—&gt;读到版本号1.1</p><p>事务2—&gt;读到版本号1.2</p><p>其中事务1先修改了，修改之后看了版本号是1.1，于是提交修改的数据，将版本号改为1.2</p><p>其中事务2后修改的，修改之后准备提交的时候，发现版本号是1.2，和它最初读的版本号不一致，回滚</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;JDBC是SUN公司制定的一套接口&lt;/p&gt;
&lt;p&gt;java.sql.*&lt;/p&gt;
&lt;p&gt;接口都有调用者和实现者&lt;/p&gt;
&lt;p&gt;面向接口调用、面向接口写实现类，属于面向接口编程&lt;/p&gt;
&lt;p&gt;为什么要面向接口编程？&lt;/p&gt;
&lt;p&gt;​    解耦合：降低程序的耦合度，提高程序的扩</summary>
      
    
    
    
    
    <category term="JDBC" scheme="http://example.com/tags/JDBC/"/>
    
  </entry>
  
  <entry>
    <title>关于《约定的梦幻岛》的感受</title>
    <link href="http://example.com/2023/09/28/%E5%85%B3%E4%BA%8E%E3%80%8A%E7%BA%A6%E5%AE%9A%E7%9A%84%E6%A2%A6%E5%B9%BB%E5%B2%9B%E3%80%8B%E7%9A%84%E6%84%9F%E5%8F%97/"/>
    <id>http://example.com/2023/09/28/%E5%85%B3%E4%BA%8E%E3%80%8A%E7%BA%A6%E5%AE%9A%E7%9A%84%E6%A2%A6%E5%B9%BB%E5%B2%9B%E3%80%8B%E7%9A%84%E6%84%9F%E5%8F%97/</id>
    <published>2023-09-28T06:11:08.000Z</published>
    <updated>2023-09-28T06:26:15.733Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浅谈感受"><a href="#浅谈感受" class="headerlink" title="浅谈感受"></a>浅谈感受</h2><blockquote><p>一群无忧无虑生活在孤儿院的孩子们，有一天发现了一个惊人的事实，围绕在他们身边的幸福景象其实是险恶重重的地狱，而成长到十二岁就可以被领养的传闻，实际上是被当成养殖的肉猪贩卖，所谓被嘱咐不要翻过的围墙，是因为外面就是刽子手的厨房。当孩子们了解到残酷的真相，伙伴们一个个被怪物当成肉食贩卖时，激烈的逃脱即将展开。</p></blockquote><p>我们现实世界的处境居然和《约定的梦幻岛》有些相似呢？只不过在工厂的孩子们是直接死掉，大脑作为最高价值的食物，身体则同样可食。而我们只是保留了生命，大脑和身体为这个世界提供养分，同时我们也接收世界的养育。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;浅谈感受&quot;&gt;&lt;a href=&quot;#浅谈感受&quot; class=&quot;headerlink&quot; title=&quot;浅谈感受&quot;&gt;&lt;/a&gt;浅谈感受&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;一群无忧无虑生活在孤儿院的孩子们，有一天发现了一个惊人的事实，围绕在他们身边的幸福景象其实是险恶重</summary>
      
    
    
    
    
    <category term="动漫" scheme="http://example.com/tags/%E5%8A%A8%E6%BC%AB/"/>
    
  </entry>
  
  <entry>
    <title>学习放下优越感</title>
    <link href="http://example.com/2023/09/28/%E5%AD%A6%E4%B9%A0%E6%94%BE%E4%B8%8B%E4%BC%98%E8%B6%8A%E6%84%9F/"/>
    <id>http://example.com/2023/09/28/%E5%AD%A6%E4%B9%A0%E6%94%BE%E4%B8%8B%E4%BC%98%E8%B6%8A%E6%84%9F/</id>
    <published>2023-09-28T05:35:06.000Z</published>
    <updated>2023-09-28T05:54:08.699Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浅谈优越感"><a href="#浅谈优越感" class="headerlink" title="浅谈优越感"></a>浅谈优越感</h2><p>优越感是一种自我意识，让人相信自己在某些方面超越他人，经常伴随着对他人的轻视或排斥。鄙视他人是优越感的典型表现。</p><p>优越感的产生可能来自于我们在幼年时受到不恰当的教育，例如试图向儿童讲解学习的乐趣（这种成年人或许都未曾感受到的乐趣）、学习所带来的益处是难以起到效果的，但是通过人与人之间的优越感激励儿童学习起到的效果会更好一些。</p><p>为什么要摒弃优越感呢？因为拥有优越感的人常常会以不适当的方式表现出来。通常容易察觉到的优越感表现包括我们的行为和言辞，它们可能显示出过度的自我关注或轻视他人，从而在公众场合做出奇怪的行为，说出令人不适的话，让别人产生不好的印象。而不太容易察觉的优越感则存在于我们的内心思想中，例如在内心评价他人或通过贬低他人的优越感来满足自己的优越感，这种优越感会让我们产生不健康的心理。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;浅谈优越感&quot;&gt;&lt;a href=&quot;#浅谈优越感&quot; class=&quot;headerlink&quot; title=&quot;浅谈优越感&quot;&gt;&lt;/a&gt;浅谈优越感&lt;/h2&gt;&lt;p&gt;优越感是一种自我意识，让人相信自己在某些方面超越他人，经常伴随着对他人的轻视或排斥。鄙视他人是优越感的典型表现。&lt;/</summary>
      
    
    
    
    
    <category term="心理" scheme="http://example.com/tags/%E5%BF%83%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>springboot+vue</title>
    <link href="http://example.com/2023/09/26/springboot-vue/"/>
    <id>http://example.com/2023/09/26/springboot-vue/</id>
    <published>2023-09-26T02:25:50.000Z</published>
    <updated>2023-10-07T06:22:12.350Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h2><p>vue ui打开vue的ui界面，可以在界面上新建项目，运行项目</p><p>vue只有一个主界面</p><h3 id="前后端分离"><a href="#前后端分离" class="headerlink" title="前后端分离"></a>前后端分离</h3><p>传统的Java Web开发中，前端使用JSP开发，JSP不是由后端开发者独立完成</p><p>前端-&gt;html静态页面-&gt;后端-&gt;JSP</p><p>这种开发效率极低，可以使用前后端分离的方式进行开发</p><p>前端通过Ajax请求来访问后端的数据接口，将Model展示到View中</p><p>单体-&gt;前端应用+后端应用</p><p>前端应用：负责数据展示和用户交互</p><p>后端应用：负责提供数据处理接口</p><p>前端HTML-&gt;Ajax-&gt;RESTful后端数据接口</p><p>前后端跨域：<a href="https://juejin.cn/post/7006320955316240415">https://juejin.cn/post/7006320955316240415</a></p><h3 id="Vue-Element-UI"><a href="#Vue-Element-UI" class="headerlink" title="Vue+Element UI"></a>Vue+Element UI</h3><p>Vue集成ElementUI</p><p>Element UI后台管理系统主要的标签：</p><ul><li><p>el-container:构建整个页面框架</p></li><li><p>el-aside:构建左侧菜单</p></li><li><p>el-menu：左侧菜单内容，常用属性</p><p>:default-openeds: 默认展开的菜单，通过菜单的index值来关联</p><p>:default-active: 默认选中的菜单，通过菜单的index值来关联</p></li><li><p>el-submenu: 可展开的菜单，常用属性（可展开菜单，加template描述内容）</p><p>index：菜单的下标，文本类型，不能是数值类型</p></li><li><p>template:对应的el-submenu的菜单名</p></li><li>i:设置菜单图标，通过class属性实现<ul><li>el-icon-messae</li><li>el-icon-menu</li><li>el-icon-setting</li></ul></li><li>el-menu-item:菜单的子节点（不可再展开） index描述</li></ul><p>不同权限的用户看到的菜单是不一样的，菜单不能写死</p><h4 id="Vue-router来动态构建左侧菜单"><a href="#Vue-router来动态构建左侧菜单" class="headerlink" title="Vue router来动态构建左侧菜单"></a>Vue router来动态构建左侧菜单</h4><p>在views中创建页面</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Vue&quot;&gt;&lt;a href=&quot;#Vue&quot; class=&quot;headerlink&quot; title=&quot;Vue&quot;&gt;&lt;/a&gt;Vue&lt;/h2&gt;&lt;p&gt;vue ui打开vue的ui界面，可以在界面上新建项目，运行项目&lt;/p&gt;
&lt;p&gt;vue只有一个主界面&lt;/p&gt;
&lt;h3 id=&quot;前后端</summary>
      
    
    
    
    
    <category term="springboot+vue" scheme="http://example.com/tags/springboot-vue/"/>
    
  </entry>
  
  <entry>
    <title>若依框架的具体实现</title>
    <link href="http://example.com/2023/09/25/%E8%8B%A5%E4%BE%9D%E6%A1%86%E6%9E%B6%E7%9A%84%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0/"/>
    <id>http://example.com/2023/09/25/%E8%8B%A5%E4%BE%9D%E6%A1%86%E6%9E%B6%E7%9A%84%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0/</id>
    <published>2023-09-25T06:35:48.000Z</published>
    <updated>2023-09-25T15:21:19.740Z</updated>
    
    <content type="html"><![CDATA[<h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><h3 id="验证码的流程"><a href="#验证码的流程" class="headerlink" title="验证码的流程"></a>验证码的流程</h3><p>后端生成表达式1+4@5</p><p>1+4生成图片传到前端，5这个结果传入redis，用作判断验证码是否正确</p><h3 id="登录的流程"><a href="#登录的流程" class="headerlink" title="登录的流程"></a>登录的流程</h3><p>后端：</p><ul><li>校验验证码</li><li>校验用户名和密码</li><li>生成token</li></ul><p>使用异步任务管理器，结合线程池，实现了异步的操作日志记录和业务逻辑实现异步解耦合</p><h3 id="首页加载"><a href="#首页加载" class="headerlink" title="首页加载"></a>首页加载</h3><p>前端每个页面跳转都要调用getInfo和getRouters</p><p>getInfo：获取角色和权限，存储到Vuex中</p><p>getRouters：根据当前用户的权限获取动态路由</p><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><p>流程：加载vue页面-&gt;请求后台数据</p><p>用户的list</p><p>1.startPage()</p><p>PageHelper中的reasonable对参数进行逻辑处理，保证参数的正确性</p><p>pageNum=0/-1,pageNum=1</p><p>2.userService.select</p><p>@DataScope(deptAlias,userAlias)</p><p>3.treeselect</p><p>(1)查出所有的部门数据</p><p>(2)组装成树状结构</p><p>recursionFn</p><h2 id="异步任务管理器"><a href="#异步任务管理器" class="headerlink" title="异步任务管理器"></a>异步任务管理器</h2><p>内部定义了一个线程池，根据业务创建添加日志的任务，交给线程池来处理，这样做到日志和业务的抽象，解耦合，日志全部统一处理</p><p>示例：/login下的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_SUCCESS, MessageUtils.message(<span class="string">&quot;user.login.success&quot;</span>)));</span><br></pre></td></tr></table></figure><h2 id="代码自动生成"><a href="#代码自动生成" class="headerlink" title="代码自动生成"></a>代码自动生成</h2><p>创建数据表</p><p>系统工具-&gt;代码生成</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;登录&quot;&gt;&lt;a href=&quot;#登录&quot; class=&quot;headerlink&quot; title=&quot;登录&quot;&gt;&lt;/a&gt;登录&lt;/h2&gt;&lt;h3 id=&quot;验证码的流程&quot;&gt;&lt;a href=&quot;#验证码的流程&quot; class=&quot;headerlink&quot; title=&quot;验证码的流程&quot;&gt;&lt;/a&gt;验</summary>
      
    
    
    
    
    <category term="若依" scheme="http://example.com/tags/%E8%8B%A5%E4%BE%9D/"/>
    
  </entry>
  
  <entry>
    <title>施图茨的疗愈之道</title>
    <link href="http://example.com/2023/09/23/%E6%96%BD%E5%9B%BE%E8%8C%A8%E7%9A%84%E7%96%97%E6%84%88%E4%B9%8B%E9%81%93/"/>
    <id>http://example.com/2023/09/23/%E6%96%BD%E5%9B%BE%E8%8C%A8%E7%9A%84%E7%96%97%E6%84%88%E4%B9%8B%E9%81%93/</id>
    <published>2023-09-23T07:42:45.000Z</published>
    <updated>2023-09-23T18:37:01.298Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>当我在B站上偶然发现一位读书博主强烈推荐了《施图茨的疗愈之道》这部纪录片，我被吸引了过去，并决定一探究竟。这部纪录片主要探讨了如何克服自身的障碍，即所谓的“PART X”，这是我们不愿意面对、不愿意接受自身的一部分，它可能会妨碍我们前进的道路。</p><h2 id="《施图茨的疗愈之道》"><a href="#《施图茨的疗愈之道》" class="headerlink" title="《施图茨的疗愈之道》"></a>《施图茨的疗愈之道》</h2><p>这部纪录片由乔纳·希尔（提名奥斯卡）拍摄，记录了其主治医生菲尔·施图茨的经历和视觉心理治疗模型。</p><h2 id="PART-X"><a href="#PART-X" class="headerlink" title="PART X"></a>PART X</h2><p>PART X 是我们不愿意面对、不愿意接受自身的一部分，比如评价他人的自己、自卑的自己、制定目标却难开始执行的自己。PART X就像故事中的反派，我们是故事的主角。在我们自己的故事中，找到如何打败反派的方法至关重要，施图茨给出的方法是学会与痛苦、不确定性、持续的努力共存。</p><h2 id="TOOLS"><a href="#TOOLS" class="headerlink" title="TOOLS"></a>TOOLS</h2><p>在打败PART X的过程中，我们可以借助一些工具。</p><h3 id="重建生命力"><a href="#重建生命力" class="headerlink" title="重建生命力"></a>重建生命力</h3><p>重建生命力的要点：</p><p>身体层面：运动、饮食、睡眠</p><p>与他人的关系</p><p>与自我的关系，写作有助于帮助自己与潜意识建立联系，通过记录自己，发现自己都不知道的东西</p><h3 id="串珍珠"><a href="#串珍珠" class="headerlink" title="串珍珠"></a>串珍珠</h3><p>时间转瞬即逝，不要把时间耗费在力求他人给出的公平 补偿之事上，不要让这些破事儿把人生搁浅，珍珠里有污浊，也要把下一颗珍珠串在绳上。全然接纳，从自身行为中获得平衡感，应对然后从中找出积极的东西</p><p>每件事价值相同</p><h3 id="与阴影对话"><a href="#与阴影对话" class="headerlink" title="与阴影对话"></a>与阴影对话</h3><p><img src="https://img1.doubanio.com/view/photo/l/public/p2890523587.webp" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;当我在B站上偶然发现一位读书博主强烈推荐了《施图茨的疗愈之道》这部纪录片，我被吸引了过去，并决定一探究竟。这部纪录片主要探讨了如何克服自身的</summary>
      
    
    
    
    
    <category term="心理" scheme="http://example.com/tags/%E5%BF%83%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>针对fsb的权限过滤文档</title>
    <link href="http://example.com/2023/09/22/%E9%92%88%E5%AF%B9fsb%E7%9A%84%E6%9D%83%E9%99%90%E8%BF%87%E6%BB%A4%E6%96%87%E6%A1%A3/"/>
    <id>http://example.com/2023/09/22/%E9%92%88%E5%AF%B9fsb%E7%9A%84%E6%9D%83%E9%99%90%E8%BF%87%E6%BB%A4%E6%96%87%E6%A1%A3/</id>
    <published>2023-09-22T09:01:13.000Z</published>
    <updated>2023-11-16T08:12:50.045Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c6f4f74ba555df946946f24a30c5e66683280672fcbe820ea9ee52de43299047"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    
    <category term="权限过滤" scheme="http://example.com/tags/%E6%9D%83%E9%99%90%E8%BF%87%E6%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>如何运行vue项目</title>
    <link href="http://example.com/2023/09/22/%E5%A6%82%E4%BD%95%E8%BF%90%E8%A1%8Cvue%E9%A1%B9%E7%9B%AE/"/>
    <id>http://example.com/2023/09/22/%E5%A6%82%E4%BD%95%E8%BF%90%E8%A1%8Cvue%E9%A1%B9%E7%9B%AE/</id>
    <published>2023-09-22T07:43:18.000Z</published>
    <updated>2023-09-22T07:49:18.641Z</updated>
    
    <content type="html"><![CDATA[<p>项目需要运行vue前端，参考以及相关的readme运行成功</p><p><a href="https://blog.csdn.net/A19542171949/article/details/123828905">https://blog.csdn.net/A19542171949/article/details/123828905</a></p><p><strong>(vue)vue项目Error: Cannot find module ‘xxx’类报错的解决方法</strong></p><p><a href="https://blog.csdn.net/qq_44754635/article/details/126460299">https://blog.csdn.net/qq_44754635/article/details/126460299</a></p><p>总结：我也不知道为什么，反正照着做一遍，项目就可以运行成功了，好神奇。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;项目需要运行vue前端，参考以及相关的readme运行成功&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/A19542171949/article/details/123828905&quot;&gt;https://blog.csdn.net/A195421</summary>
      
    
    
    
    
    <category term="vue" scheme="http://example.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>进行mybatis实战时遇到的一些错误</title>
    <link href="http://example.com/2023/09/21/%E8%BF%9B%E8%A1%8Cmybatis%E5%AE%9E%E6%88%98%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%94%99%E8%AF%AF/"/>
    <id>http://example.com/2023/09/21/%E8%BF%9B%E8%A1%8Cmybatis%E5%AE%9E%E6%88%98%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%94%99%E8%AF%AF/</id>
    <published>2023-09-21T02:07:41.000Z</published>
    <updated>2023-09-21T05:49:43.582Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>今天在看mybatis-plus的一些知识，我其实学知识一直很难动手实践，因为配置环境超级麻烦，各种报错，解决起来很烦，尤其是不知道怎么办的时候，但我不能总是不动手去做，不实践我永远不可能知道具体怎么做。在这里记录一下解决配置问题的有效方法。</p><h2 id="Plugin‘org-springframework-boot-spring-boot-maven-plugin-‘-not-found的解决方案"><a href="#Plugin‘org-springframework-boot-spring-boot-maven-plugin-‘-not-found的解决方案" class="headerlink" title="Plugin‘org.springframework.boot:spring-boot-maven-plugin:‘ not found的解决方案"></a>Plugin‘org.springframework.boot:spring-boot-maven-plugin:‘ not found的解决方案</h2><p>解决方法来自<a href="https://www.cnblogs.com/Cheney822/p/16487932.html，只是为了记录搬运到本博客">https://www.cnblogs.com/Cheney822/p/16487932.html，只是为了记录搬运到本博客</a></p><h3 id="方法一：清理IDEA的缓存"><a href="#方法一：清理IDEA的缓存" class="headerlink" title="方法一：清理IDEA的缓存"></a>方法一：清理IDEA的缓存</h3><blockquote><p>File -&gt; Invalidate Caches</p></blockquote><h3 id="方法二：添加版本号"><a href="#方法二：添加版本号" class="headerlink" title="方法二：添加版本号"></a>方法二：添加版本号</h3><p>先看自己当前的版本号</p><ul><li>首先打开<code>pom.xml</code>文件进行查看</li><li>Ctrl+F搜索<code>spring-boot-starter-parent</code></li><li>找到<code>&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</code>这一行。</li><li>下面一行就是版本号。</li></ul><p>然后将版本号放到报错一行的下面</p><h1 id="类文件具有错误的版本-61-0-应为-52-0-请删除该文件或确保该文件位于正确的类路径子目录中。"><a href="#类文件具有错误的版本-61-0-应为-52-0-请删除该文件或确保该文件位于正确的类路径子目录中。" class="headerlink" title="类文件具有错误的版本 61.0, 应为 52.0 请删除该文件或确保该文件位于正确的类路径子目录中。"></a>类文件具有错误的版本 61.0, 应为 52.0 请删除该文件或确保该文件位于正确的类路径子目录中。</h1><p>原因：boot3.0.0版本要求jdk17以上，自己的版本是1.8</p><p>方法：</p><p>改Project Structure的JDK版本 </p><h1 id="Mysql-80-解决忘记密码无法跳过错误-mysqld-—console-—skip-grant-tables-—shared-memory-代码无效的问题"><a href="#Mysql-80-解决忘记密码无法跳过错误-mysqld-—console-—skip-grant-tables-—shared-memory-代码无效的问题" class="headerlink" title="Mysql 80 解决忘记密码无法跳过错误 mysqld —console —skip-grant-tables —shared-memory 代码无效的问题"></a>Mysql 80 解决忘记密码无法跳过错误 mysqld —console —skip-grant-tables —shared-memory 代码无效的问题</h1><p>参考这个方法解决<a href="https://blog.csdn.net/wangzhepaohui/article/details/109685612">https://blog.csdn.net/wangzhepaohui/article/details/109685612</a></p><h1 id="Unsupported-class-file-major-version-61"><a href="#Unsupported-class-file-major-version-61" class="headerlink" title="Unsupported class file major version 61"></a>Unsupported class file major version 61</h1><p>类文件主版本61对应的Java SDK 17</p><p>下载的项目中的springboot不支持JAVA SDK17</p><p>配置环境经典的错误就是版本不兼容</p><h1 id="Maven项目pom-xml-project标签爆红解决方法"><a href="#Maven项目pom-xml-project标签爆红解决方法" class="headerlink" title="Maven项目pom.xml project标签爆红解决方法"></a>Maven项目pom.xml project标签爆红解决方法</h1><blockquote><p>‘parent.relativePath’ of POM com.hrp:springboot_jpa:1.0-SNAPSHOT (F:\IdeaCode\java-web\springboot_jpa\pom.xml) points at com.hrp:java-web instead of org.springframework.boot:spring-boot-starter-parent, please verify your project structure</p></blockquote><p>这个问题是说在project标签下的parent.relativePath标签指向的路径出现了错误，所以导致报错。</p><p>解决方法：在parent标签下，添加<strong><code>&lt;relativePath/&gt;</code></strong>即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;今天在看mybatis-plus的一些知识，我其实学知识一直很难动手实践，因为配置环境超级麻烦，各种报错，解决起来很烦，尤其是不知道怎么办的</summary>
      
    
    
    
    
    <category term="编译器报错" scheme="http://example.com/tags/%E7%BC%96%E8%AF%91%E5%99%A8%E6%8A%A5%E9%94%99/"/>
    
  </entry>
  
  <entry>
    <title>mybatis-plus入门</title>
    <link href="http://example.com/2023/09/20/mybatis-plus%E5%85%A5%E9%97%A8/"/>
    <id>http://example.com/2023/09/20/mybatis-plus%E5%85%A5%E9%97%A8/</id>
    <published>2023-09-20T06:34:35.000Z</published>
    <updated>2023-09-20T07:09:24.400Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开篇"><a href="#开篇" class="headerlink" title="开篇"></a>开篇</h2><p>这篇文章是基于mybatis-plus官方文档写的，项目中要用到mybatis-plus，故写下这篇文章。</p><h2 id="MyBatis-Plus是什么"><a href="#MyBatis-Plus是什么" class="headerlink" title="MyBatis-Plus是什么"></a>MyBatis-Plus是什么</h2><p>MyBatis-Plus是MyBatis的增强工具，简化开发，提高效率。</p><p>特性：</p><ul><li><strong>无侵入</strong>：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑</li><li><strong>损耗小</strong>：启动即会自动注入基本 CURD，性能基本无损耗，直接面向对象操作</li><li><strong>强大的 CRUD 操作</strong>：内置通用 Mapper、通用 Service，仅仅通过少量配置即可实现单表大部分 CRUD 操作，更有强大的条件构造器，满足各类使用需求</li><li><strong>支持 Lambda 形式调用</strong>：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错</li><li><strong>支持主键自动生成</strong>：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由配置，完美解决主键问题</li><li><strong>支持 ActiveRecord 模式</strong>：支持 ActiveRecord 形式调用，实体类只需继承 Model 类即可进行强大的 CRUD 操作</li><li><strong>支持自定义全局通用操作</strong>：支持全局通用方法注入（ Write once, use anywhere ）</li><li><strong>内置代码生成器</strong>：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、 Controller 层代码，支持模板引擎，更有超多自定义配置等您来使用</li><li><strong>内置分页插件</strong>：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 List 查询</li><li><strong>分页插件支持多种数据库</strong>：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、Postgre、SQLServer 等多种数据库</li><li><strong>内置性能分析插件</strong>：可输出 SQL 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询</li><li><strong>内置全局拦截插件</strong>：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作</li></ul><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><p>添加依赖、在application.yml配置数据库相关内容，在spring boot启动类中添加@MapperScan注解。</p><p>编写Mapper包下的接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h2><h3 id="TableName"><a href="#TableName" class="headerlink" title="@TableName"></a>@TableName</h3><p>表明注解，标识实体类对应的表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableName(&quot;sys_user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="TableId"><a href="#TableId" class="headerlink" title="@TableId"></a>@TableId</h3><p>主键注解</p><div class="table-container"><table><thead><tr><th>属性</th><th>类型</th><th>必须指定</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>value</td><td>String</td><td>否</td><td></td><td>主键字段名</td></tr><tr><td>type</td><td>Enum</td><td>否</td><td>IdType.NONE</td><td>指定主键类型</td></tr></tbody></table></div><p>IdType的字段介绍</p><div class="table-container"><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>AUTO</td><td>数据库ID自增</td></tr><tr><td>NONE</td><td>无状态，该类型为未设置主键类型（注解里等于跟随全局，全局里约等于 INPUT）</td></tr><tr><td>INPUT</td><td>insert 前自行 set 主键值</td></tr><tr><td>ASSIGN_ID</td><td>分配 ID(主键类型为 Number(Long 和 Integer)或 String)(since 3.3.0),使用接口<code>IdentifierGenerator</code>的方法<code>nextId</code>(默认实现类为<code>DefaultIdentifierGenerator</code>雪花算法)</td></tr><tr><td>ASSIGN_UUID</td><td>分配 UUID,主键类型为 String(since 3.3.0),使用接口<code>IdentifierGenerator</code>的方法<code>nextUUID</code>(默认 default 方法)</td></tr></tbody></table></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableName(&quot;sys_user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@TableId</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="TableField"><a href="#TableField" class="headerlink" title="@TableField"></a>@TableField</h3><p>非主键字段注解</p><h3 id="Version"><a href="#Version" class="headerlink" title="@Version"></a>@Version</h3><p>乐观锁注解，标记在字段上</p><h3 id="EnumValue"><a href="#EnumValue" class="headerlink" title="@EnumValue"></a>@EnumValue</h3><p>普通枚举类注解</p><h2 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a>核心功能</h2><h3 id="代码生成器"><a href="#代码生成器" class="headerlink" title="代码生成器"></a>代码生成器</h3><p>快速生成 Entity、Mapper、Mapper XML、Service、Controller 等各个模块的代码</p><h3 id="CRUD接口"><a href="#CRUD接口" class="headerlink" title="CRUD接口"></a>CRUD接口</h3><h5 id="Mapper-CRUD接口"><a href="#Mapper-CRUD接口" class="headerlink" title="Mapper CRUD接口"></a>Mapper CRUD接口</h5><p>通用 CRUD 封装<a href="https://gitee.com/baomidou/mybatis-plus/blob/3.0/mybatis-plus-core/src/main/java/com/baomidou/mybatisplus/core/mapper/BaseMapper.java">BaseMapper (opens new window)</a>接口，为 <code>Mybatis-Plus</code> 启动时自动解析实体表关系映射转换为 <code>Mybatis</code> 内部对象注入容器</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>其实mybatis-plus中涉及到了许多功能，但我看不下去了，我只挑了些许功能写到博客中。在学习mybatis-plus的过程中，Mapper层的CRUD接口让我想到了Spring JPA，也是用来简化单表操作的，但我看了网上相关文章，感觉没有说清楚，挖个坑以后再弄清楚吧。要学的东西还有很多，想象就很疲惫QAQ。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;开篇&quot;&gt;&lt;a href=&quot;#开篇&quot; class=&quot;headerlink&quot; title=&quot;开篇&quot;&gt;&lt;/a&gt;开篇&lt;/h2&gt;&lt;p&gt;这篇文章是基于mybatis-plus官方文档写的，项目中要用到mybatis-plus，故写下这篇文章。&lt;/p&gt;
&lt;h2 id=&quot;MyBa</summary>
      
    
    
    
    
    <category term="mybatis-plus" scheme="http://example.com/tags/mybatis-plus/"/>
    
  </entry>
  
  <entry>
    <title>spring aop是什么</title>
    <link href="http://example.com/2023/09/19/spring-aop%E6%98%AF%E4%BB%80%E4%B9%88/"/>
    <id>http://example.com/2023/09/19/spring-aop%E6%98%AF%E4%BB%80%E4%B9%88/</id>
    <published>2023-09-19T07:21:07.000Z</published>
    <updated>2023-09-23T18:50:31.771Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Spring-AOP是什么"><a href="#Spring-AOP是什么" class="headerlink" title="Spring AOP是什么"></a>Spring AOP是什么</h2><p>AOP面向切面编程，是一种编程模式。将业务逻辑的各个部分进行隔离。最流行的AOP框架有两个，分别是Spring AOP和AspectJ。</p><p>Spring AOP使用纯Java实现，不需要专门的编译过程和类加载器，<em>在运行期间通过代理方式向目标类植入增强的代码。</em>（这句话在说啥？？？）</p><p>AspectJ 是一个基于 Java 语言的 AOP 框架，从 Spring 2.0 开始，Spring AOP 引入了对 AspectJ 的支持。AspectJ 扩展了 Java 语言，提供了一个专门的编译器，在编译时提供横向代码的植入。</p><h2 id="AOP相关术语"><a href="#AOP相关术语" class="headerlink" title="AOP相关术语"></a>AOP相关术语</h2><div class="table-container"><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>Joinpoint（连接点）</td><td>指那些被拦截到的点，在 Spring 中，可以被动态代理拦截目标类的方法。</td></tr><tr><td>Pointcut（切入点）</td><td>指要对哪些 Joinpoint 进行拦截，即被拦截的连接点。</td></tr><tr><td>Advice（通知）</td><td>指拦截到 Joinpoint 之后要做的事情，即对切入点增强的内容。</td></tr><tr><td>Target（目标）</td><td>指代理的目标对象。</td></tr><tr><td>Weaving（植入）</td><td>指把增强代码应用到目标上，生成代理对象的过程。</td></tr><tr><td>Proxy（代理）</td><td>指生成的代理对象。</td></tr><tr><td>Aspect（切面）</td><td>切入点和通知的结合。</td></tr></tbody></table></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Spring-AOP是什么&quot;&gt;&lt;a href=&quot;#Spring-AOP是什么&quot; class=&quot;headerlink&quot; title=&quot;Spring AOP是什么&quot;&gt;&lt;/a&gt;Spring AOP是什么&lt;/h2&gt;&lt;p&gt;AOP面向切面编程，是一种编程模式。将业务逻辑的各个</summary>
      
    
    
    
    
    <category term="spring" scheme="http://example.com/tags/spring/"/>
    
  </entry>
  
</feed>
